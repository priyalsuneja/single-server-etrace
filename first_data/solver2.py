import cvxpy as cp
import numpy as np 

# x = cp.Variable(4)
# A = np.matrix('244849928 97470486 301023131 30738760130; \
# 482884030 202430630 613212426 28985995302; \
# 732509330 115148096 644271253 89181915044; \
# 176062809 81671535 223252703 26637257564; \
# 402143453 168697072 508117320 28323359643; \
# 242263962 112196304 298299864 27739254542; \
# 174998729 81233114 222107770 26638426974; \
# 260088427 118124409 333509515 27558067909; \
# 994420 927433 21852 214652819; \
# 694741475 95560 657902930 6895842484; \
# 32339330 20552845 32607131 170361327; \
# 27796 1756 18716 2165715')
# 
# b = [83.525330, 84.566345, 184.738403, 69.97943, 81.497131, 74.895630, 70.224426, 73.884888, 0.18786, 246.261108, 27.428528, 0.092285]

# obj = cp.Minimize(cp.sum(cp.abs(A@ x - b)))

x = cp.Variable(1)
y = cp.Variable(1)
z = cp.Variable(1)
w = cp.Variable(1)

obj = cp.Minimize( \
    cp.abs(244849928*x + 97470486*y + 301023131*z + 30738760130*w - 83) + \
    cp.abs(482884030*x + 202430630*y + 613212426*z + 28985995302*w - 84) + \
    cp.abs(732509330*x + 115148096*y + 644271253*z + 89181915044*w - 184) + \
    cp.abs(176062809*x + 81671535*y + 223252703*z + 26637257564*w - 69) + \
    cp.abs(402143453*x + 168697072*y + 508117320*z + 28323359643*w - 81) + \
    cp.abs(242263962*x + 112196304*y + 298299864*z + 27739254542*w - 74) + \
    cp.abs(174998729*x + 81233114*y + 222107770*z + 26638426974*w - 70) + \
    cp.abs(260088427*x + 118124409*y + 333509515*z + 27558067909*w - 73) + \
    cp.abs(994420*x + 927433*y + 21852*z + 214652819*w - 0.187) + \
    cp.abs(694741475*x + 95560*y + 657902930*z + 6895842484*w - 246) + \
    cp.abs(32339330*x + 20552845*y + 32607131*z + 170361327*w - 27) + \
    cp.abs(27796*x + 1756*y + 18716*z + 2165715*w - 0.092285))

# con = [x>=0, y>=0, z>=0, w>=0]
con = [x>=0, y>=0, z>=0]

prob = cp.Problem(obj,con)

# prob.solve(verbose=True)
prob.solve()

print(x.value)
print(y.value)
print(z.value)
print(w.value)
print(prob.value)
