import cvxpy as cp
import numpy as np 

x = cp.Variable(7)
A = np.matrix('1106532 43938950839 0.63 241883851 112964265 302996969 156787;\
1120819 41289863658 0.65 173700287 82785104 227693531 262389; \
1042915 41056219808 0.65 178048842 82601371 225725815 264178; \
1050443 43115562094 0.64 259685744 118837781 337752947 203052; \
8805 3468138 0.62 27409 1729 18417 0; \
128905 8673540405 0.50 412073934 114105 410950816 15366; \
270376 15115940346 0.46 705997739 211140 657901285 23049; \
1231344 48695113984 0.59 485970913 204637555 619468512 224684; \
1184361 47035081243 0.60 401461195 170084950 512314105 225532; \
2967299 49056400125 0.63 241156551 95894554 304069459 503069; \
3559496 109194563322 0.82 731930858 117084328 649577427 525536; \
57525 1782424327 0.10 32353896 20539920 32436945 110915')

b_m = np.matrix('75.286255;70.716797;67.974243;71.803833;0.087830;140.682190;249.596802;84.429199;80.265686;84.155579;184.976379;28.126038')

# b_m = np.matrix('75.286255 70.716797 67.974243 71.803833 0.087830 140.682190 249.596802 84.429199 80.265686 84.155579 184.976379 28.126038')

b = [75.286255, 70.716797, 67.974243, 71.803833, 0.087830, 140.682190, 249.596802, 84.429199, 80.265686, 84.155579, 184.976379, 28.126038]

b_temp = [1,1,1,1,1,1,1,1,1,1,1,1]
# print((A@x-b))

obj = cp.Minimize(cp.sum(cp.square((A/b_m)@ x - b_temp)))
# obj = cp.Minimize(cp.sum(cp.abs((A/b_m)@ x - b_temp)))
con = [0<=x]

prob = cp.Problem(obj,con)

# prob.solve(verbose=True)
prob.solve(solver=cp.SCS)
# prob.solve()

print(x.value)

# p = cp.sum(cp.abs(A @ x.value - b))

# print (A@x.value -b)
